package com.microservice.app;



	import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.math.BigDecimal;
import java.util.List;

	import org.json.JSONException;
	import org.junit.jupiter.api.Test;
	import org.junit.jupiter.api.extension.ExtendWith;
	import org.skyscreamer.jsonassert.JSONAssert;
	import org.springframework.boot.test.context.SpringBootTest;
	import org.springframework.boot.test.web.client.TestRestTemplate;
	import org.springframework.boot.test.web.server.LocalServerPort;
	import org.springframework.http.HttpEntity;
	import org.springframework.http.HttpHeaders;
	import org.springframework.http.HttpMethod;
	import org.springframework.http.ResponseEntity;
	import org.springframework.test.context.junit.jupiter.SpringExtension;

import com.microservice.app.model.ExchangeRate;

	@ExtendWith(SpringExtension.class)
	@SpringBootTest(classes = CurrencyExchangeServiceApplication.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
	public class ExchangeControllerTesting {
	    @LocalServerPort
	    private int port;

	    TestRestTemplate restTemplate = new TestRestTemplate();

	    HttpHeaders headers = new HttpHeaders();

	    @Test
	    public void testRetrieveAllExchangeRates() throws JSONException {

	        HttpEntity<String> entity = new HttpEntity<>(null, headers);

	        ResponseEntity<String> response = restTemplate.exchange(
//	                createURLWithPort("/students/Student1/courses/Course1"),
	        		createURLWithPort("/currency-exchange"),
	               
	                HttpMethod.GET, entity, String.class);

	        String expected = "[\r\n"
	        		+ "    {\r\n"
	        		+ "        \"id\": 11002,\r\n"
	        		+ "        \"from\": \"EUR\",\r\n"
	        		+ "        \"to\": \"INR\",\r\n"
	        		+ "        \"conversionMultiple\": 99.00,\r\n"
	        		+ "        \"environment\": \"8001\"\r\n"
	        		+ "    },\r\n"
	        		+ "    {\r\n"
	        		+ "        \"id\": 11001,\r\n"
	        		+ "        \"from\": \"USD\",\r\n"
	        		+ "        \"to\": \"INR\",\r\n"
	        		+ "        \"conversionMultiple\": 79.00,\r\n"
	        		+ "        \"environment\": \"8000\"\r\n"
	        		+ "    },\r\n"
	        		+ "    {\r\n"
	        		+ "        \"id\": 11003,\r\n"
	        		+ "        \"from\": \"AUD\",\r\n"
	        		+ "        \"to\": \"INR\",\r\n"
	        		+ "        \"conversionMultiple\": 25.00,\r\n"
	        		+ "        \"environment\": \"8002\"\r\n"
	        		+ "    }\r\n"
	        		+ "]";

	        JSONAssert.assertEquals(expected, response.getBody(), false);
	    }
	    
	    @Test
	    public void testRetrieveOneExchangeRates() throws JSONException {

	        HttpEntity<String> entity = new HttpEntity<>(null, headers);

	        ResponseEntity<ExchangeRate> response = restTemplate.exchange(
//	                createURLWithPort("/students/Student1/courses/Course1"),
	        		createURLWithPort("/currency-exchange/from/EUR/to/INR"),
	                HttpMethod.GET, entity, ExchangeRate.class);

	        ExchangeRate expected = new ExchangeRate(11002L,"EUR","INR",BigDecimal.ONE,"8000");

	        assertEquals(expected.getId(), response.getBody().getId());
	    }

//	    @Test
//	    public void addCourse() {
//
//	        Course course = new Course("Course1", "Spring", "10Steps",
//	                List.of("Learn Maven", "Import Project", "First Example",
//	                        "Second Example"));
//
//	        HttpEntity<Course> entity = new HttpEntity<>(course, headers);
//
//	        ResponseEntity<String> response = restTemplate.exchange(
//	                createURLWithPort("/students/Student1/courses"),
//	                HttpMethod.POST, entity, String.class);
//
//	        String actual = response.getHeaders().get(HttpHeaders.LOCATION).get(0);
//
//	        assertTrue(actual.contains("/students/Student1/courses/"));
//
//	    }

	    private String createURLWithPort(String uri) {
	        return "http://localhost:" + port + uri;
	    }
	}