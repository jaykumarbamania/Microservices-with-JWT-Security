package com.cloud.batch;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.batch.core.BatchStatus;
import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.listener.JobExecutionListenerSupport;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import com.microservice.app.model.ExchangeRate;
import com.microservice.app.repo.ExchangeRateRepository;

@Component
public class JobCompletionNotificationListener extends JobExecutionListenerSupport {

    private static final Logger LOGGER = LoggerFactory.getLogger(JobCompletionNotificationListener.class);

    private final ExchangeRateRepository exRateRepository;

    @Autowired
    public JobCompletionNotificationListener(ExchangeRateRepository exRateRepository) {
        this.exRateRepository = exRateRepository;
    }

    @Override
    public void afterJob(JobExecution jobExecution) {
        if (jobExecution.getStatus() == BatchStatus.COMPLETED) {
            LOGGER.info("!!! JOB FINISHED! Time to verify the results");

//            String query = "SELECT brand, origin, characteristics FROM coffee";
//            jdbcTemplate.query(query, (rs, row) -> new ExchangeRate(rs.getString(1), rs.getString(2), rs.getString(3)))
            	exRateRepository.findAll()
                .forEach(exRate -> LOGGER.info("Found < {} > in the database.", exRate));
        }
    }
}